jmp
dec
add
add
add
add
add
add
add
push
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
inc
add
add
add
add
or
add
jna
xor
xor
add
add
add
jz
add
pusha
add
add
jng
add
add
add
add
add
push
jz
imul
add
add
add
add
push
push
add
add
add
add
inc
push
dec
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cli
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
jpo
add
add
add
xor
xor
xor
xor
sub
sub
sub
xor
xor
xor
xor
jnl
add
outsv
outsb
jnz
??
js
jnc
jc
outsb
jnc
add
add
mov
jecxz
mov
mov
loope
scasd
loop
callf
mov
cbw
xchg
out
mov
in
mov
scasd
mov
in
xchg
xchg
call
popf
jecxz
test
mov
add
out
mov
dec
outsv
??
add
outsb
daa
jz
push
gs
and
pop
pop
pop
cs
??
outsv
??
gs
mov
call
popf
jecxz
test
mov
add
add
push
add
rcl
test
sub
cmp
out
sub
pop
jns
fstenv
xchg
inc
pop
pop
nop
pop
jng
aam
adc
ja
xchg
add
hlt
mov
sub
ss
popf
dec
adc
enter
and
daa
sub
pop
xchg
and
push
loopne
mov
jmp
insb
movsb
enter
ret
cmpsb
out
mov
callf
sub
jecxz
pop
adc
push
cmpsd
mov
fbld
int
jnz
inc
pusha
sub
push
rcr
and
sbb
lock
gs
inc
fst
div
dec
aaa
mov
xchg
sbb
mov
out
adc
dec
cs
inc
push
sub
fidivl
mov
pop
fsubs
add
jp
lea
test
push
pop
es
mov
inc
mov
push
dec
popa
jg
inc
in
daa
popa
lodsb
jz
sar
push
into
wait
inc
shl
mov
in
nop
xor
push
mov
cmpsb
test
int
neg
pop
and
mov
sbb
in
dec
cwd
out
xor
xchg
out
