pusha
call
mov
call
popa
push
ret
jmp
add
and
sub
cmp
jnz
movzx
add
mov
add
mov
add
xor
mov
add
inc
mov
add
call
inc
??
jc
arpl
??
jnc
add
leave
mov
cld
rep
jnz
mov
mov
add
movzx
mov
add
mov
add
sub
mov
mov
call
mov
push
call
cld
stosd
mov
loop
mov
call
push
push
inc
push
xor
cs
dec
dec
add
ror
add
mov
push
call
cld
stosd
mov
loop
mov
call
inc
inc
push
inc
push
dec
xor
cs
dec
dec
add
ror
add
mov
push
call
cld
stosd
mov
loop
mov
call
dec
push
push
cs
dec
dec
add
ror
add
mov
push
call
cld
stosd
mov
loop
mov
call
push
push
dec
inc
dec
xor
cs
dec
dec
add
ror
add
mov
push
call
cld
stosd
mov
loop
mov
call
inc
push
gs
popa
arpl
jc
xor
push
push
call
call
or
jz
int3
jmp
add
push
adc
push
hlt
call
mov
push
call
jmp
jmp
add
call
lea
mov
call
lea
nop
nop
nop
mov
call
call
lea
nop
nop
nop
mov
call
call
lea
mov
call
lea
nop
nop
nop
mov
call
call
lea
nop
nop
nop
mov
call
mov
push
push
call
cmp
jz
push
call
pop
call
dec
??
push
gs
and
and
and
and
push
outsv
insv
and
and
insb
insb
and
imul
arpl
jc
xor
dec
outsv
outsb
imul
push
call
jmp
pop
call
call
jmp
add
xchg
std
adc
xchg
add
add
add
add
add
push
add
lea
push
push
push
push
push
push
push
call
mov
pop
mov
push
push
call
push
push
push
call
pop
cmp
jz
int3
jmp
add
pop
jmp
pop
call
call
jmp
add
sub
push
call
mov
push
push
call
cmp
jz
mov
call
push
push
push
call
push
call
mov
push
push
call
push
push
call
push
dec
inc
push
push
inc
push
inc
pop
dec
imul
jz
push
imul
inc
jnz
jc
outsb
jz
??
imul
add
add
cmp
mov
mov
call
push
jnz
outsv
outsb
arpl
pop
push
push
push
push
push
push
call
call
pop
mov
mov
mov
mov
mov
mov
lea
push
push
push
push
push
push
push
call
pop
xor
mov
sub
push
call
call
pop
mov
mov
mov
mov
mov
mov
mov
or
jz
push
push
call
mov
movzx
add
mov
mov
sub
cmp
jc
add
lea
push
nop
nop
nop
nop
push
push
call
lea
nop
nop
nop
mov
push
push
push
call
call
push
push
push
push
push
push
push
call
mov
pop
push
call
int3
jmp
call
push
push
push
call
push
push
call
or
jz
mov
push
push
push
push
push
call
or
jz
mov
lea
push
push
push
nop
nop
nop
nop
push
push
push
call
pop
cmp
nop
nop
nop
jnz
mov
lea
nop
nop
nop
push
push
push
push
push
push
call
call
push
push
push
push
push
push
push
call
mov
pop
push
call
push
call
int3
jmp
push
add
add
jz
jns
jz
insv
push
imul
add
inc
??
outsv
insv
jo
jz
jc
popa
insv
gs
add
adc
add
push
imul
outsv
dec
jnz
jz
inc
jns
gs
adc
add
push
??
imul
jc
popa
fs
or
jc
popa
jz
push
push
add
or
add
pop
insb
arpl
popa
jz
call
inc
??
jns
jz
insv
inc
imul
jns
add
sldt
add
jc
jnz
insb
inc
insb
insb
outsv
arpl
add
adc
add
push
popa
imul
insb
gs
bound
arpl
or
add
inc
insb
outsv
jnc
dec
popa
outsb
fs
gs
adc
add
inc
jc
popa
jz
dec
??
gs
push
push
add
adc
add
inc
jc
popa
jz
push
gs
outsv
jz
push
push
add
adc
add
push
jc
jz
push
jc
arpl
jnc
gs
outsv
jc
add
or
add
dec
jo
outsb
push
jc
arpl
jnc
call
inc
??
jnz
jc
outsb
jz
jc
arpl
jnc
fs
pop
add
add
imul
jc
imul
??
add
push
add
add
??
call
pop
insb
arpl
gs
or
add
pop
insb
insb
jnc
imul
or
add
pop
insb
ja
imul
add
jc
popa
fs
pop
add
add
outsv
jo
outsb
add
or
add
push
??
imul
call
push
??
imul
bound
??
add
or
add
inc
imul
gs
push
add
add
outsb
fs
??
inc
imul
add
inc
imul
jz
imul
add
push
??
jnz
jc
outsb
jz
imul
jns
add
push
add
add
jz
jc
jna
push
jns
gs
add
or
add
push
imul
call
inc
??
outsv
insv
insv
popa
outsb
fs
imul
add
add
jz
popa
jnc
inc
jc
outsv
jc
call
inc
jc
popa
jz
dec
jnz
??
add
or
outsv
popa
fs
imul
add
int3
shr
jmp
jmp
or
add
ja
jo
imul
or
gs
fs
??
popa
gs
add
or
add
inc
??
imul
or
add
dec
??
popa
gs
outsv
js
add
or
add
inc
imul
outsv
ja
add
sbb
add
inc
??
imul
jc
popa
fs
jc
arpl
jnc
add
int3
shr
jmp
jmp
sbb
add
push
gs
outsv
jz
jns
push
dec
??
popa
insb
jnz
add
adc
add
push
gs
jnz
jc
push
popa
insb
jnz
inc
js
add
sldt
add
push
??
popa
insb
jnz
inc
js
add
or
add
push
gs
jo
outsb
dec
??
add
int3
shr
jmp
jmp
push
add
add
??
insb
outsv
jnc
inc
outsb
jnz
add
adc
add
push
dec
??
outsb
jnz
push
??
jnz
arpl
add
push
add
add
??
jo
outsb
inc
outsb
jnz
inc
add
int3
shr
jmp
jmp
add
arpl
call
arpl
??
arpl
jz
call
jnc
arpl
jz
call
arpl
outsb
arpl
push
add
add
jz
outsv
jnc
bound
popa
insv
gs
push
add
add
outsv
outsb
jnc
call
jnc
outsb
fs
or
add
push
push
inc
inc
insb
gs
outsb
jnz
add
or
add
push
push
inc
push
jz
jc
jnz
add
int3
shr
jmp
jmp
or
add
mov
and
call
enter
retn
les
cmpsb
and
call
mov
mov
sal
out
sar
add
or
add
mov
mov
mov
shr
adc
add
iret
repne
into
mov
retn
and
call
mov
mov
mov
enter
shl
and
call
retf
out
call
mov
add
leave
out
loope
not
in
ret
and
sub
jmp
jmp
pusha
mov
push
push
call
add
call
pop
jc
outsb
outsv
jnz
??
add
adc
add
cld
rep
popa
leave
retn
jmp
add
push
push
push
call
cmp
jc
cmp
jz
push
call
pop
inc
pop
loop
ret
jmp
add
add
sub
add
call
call
mov
push
call
ret
jmp
and
add
ret
jmp
push
add
add
jmp
or
add
ret
jmp
add
add
ret
jmp
pusha
push
push
push
push
push
push
call
pop
or
jnz
sub
mov
push
mov
push
push
push
push
push
call
pop
pop
or
jnz
mov
call
jmp
jmp
add
add
add
retn
jmp
pusha
mov
mov
or
cmp
jz
cmp
jz
push
call
or
jz
push
call
sub
mov
mov
push
push
call
mov
cmp
jz
push
push
call
or
jz
lea
mov
and
jz
mov
cmp
jz
push
call
jmp
jmp
add
jmp
jmp
mov
push
call
add
popa
leave
retn
jmp
pusha
call
popa
leave
retn
jmp
add
call
push
call
int3
jmp
pusha
call
popa
leave
retn
jmp
add
call
push
call
int3
jmp
add
dec
inc
add
jmp
add
push
inc
add
jmp
mov
inc
cmp
jnz
mov
or
leave
retn
jmp
push
call
leave
retn
jmp
sub
push
call
mov
push
push
call
cmp
jz
mov
mov
push
mov
push
push
call
pop
add
mov
mov
push
push
call
cmp
jz
mov
push
push
push
call
push
call
push
call
add
leave
retn
jmp
mov
lea
push
call
cmp
jz
cmp
jz
cmp
jz
cmp
jz
cmp
jz
leave
retn
jmp
add
leave
retn
jmp
add
sub
push
call
mov
add
cmp
jnz
push
push
call
cmp
jz
mov
push
push
push
call
push
call
leave
retn
jmp
mov
lea
push
call
cmp
jz
cmp
jz
cmp
jz
cmp
jz
leave
retn
push
push
call
push
push
call
cmp
jz
mov
push
call
lea
lea
lea
push
push
push
push
call
push
call
lea
push
push
call
leave
retn
push
push
call
push
push
call
cmp
jz
mov
push
call
lea
lea
lea
push
push
push
push
call
push
call
lea
push
push
call
leave
retn
jmp
pusha
sub
push
call
mov
push
push
call
add
cmp
jz
mov
call
jc
popa
fs
gs
insb
add
add
push
jo
clc
dec
test
clc
push
push
push
call
push
call
mov
push
push
push
call
call
or
insv
insb
ds
arpl
jo
and
jnz
gs
popa
push
arpl
jo
and
ja
outsb
fs
ja
outsv
jo
outsb
sub
jc
popa
fs
gs
insb
and
outsb
jnz
insb
sub
jc
jnc
jp
bound
outsb
outsv
sub
outsv
jo
xor
xor
??
xor
xor
sub
jnc
jc
jo
ds
push
add
js
push
call
push
call
popa
leave
retn
jmp
pusha
sub
mov
push
push
push
call
movzx
add
cmp
ja
cmp
jnz
lea
movzx
dec
add
loop
cmp
ja
mov
sub
jc
add
push
push
push
call
push
mov
push
push
push
call
pop
cmp
jz
or
push
push
push
call
cmp
jz
push
add
sub
mov
mov
cmp
jc
mov
mov
dec
add
add
not
and
and
sub
add
pop
sub
add
xchg
add
call
pop
sub
mov
sub
push
push
push
call
cmp
jz
push
push
push
call
mov
push
push
push
call
add
popa
leave
retn
jmp
pusha
sub
push
call
mov
push
push
call
cmp
jz
mov
push
push
call
push
call
add
popa
leave
retn
enter
pusha
push
push
call
cmp
jz
mov
sub
mov
xor
push
push
mov
push
push
push
call
pop
pop
or
jz
mov
add
cmp
ja
cmp
jz
cmp
jz
cmp
jc
cmp
jc
cmp
jc
cmp
jc
xor
cld
stosb
cmp
jnz
cmp
jc
sub
cmp
jc
mov
cmp
jz
cmp
jz
push
call
jmp
inc
jmp
inc
mov
cld
stosb
jmp
push
call
add
popa
leave
retn
enter
pusha
push
push
call
cmp
jz
mov
sub
mov
push
push
push
call
cmp
jnz
mov
push
push
push
call
mov
cmp
ja
push
push
push
push
call
sub
mov
push
push
push
push
push
push
push
push
call
push
call
add
pop
loop
add
push
call
popa
leave
retn
enter
pusha
mov
sub
mov
push
push
call
push
push
push
call
sub
mov
sub
mov
sub
mov
mov
push
push
push
call
cmp
jz
mov
sub
mov
sub
mov
sub
mov
sub
mov
mov
push
push
push
call
push
push
push
call
mov
push
push
push
call
mov
popa
mov
leave
retn
enter
pusha
mov
mov
sub
mov
push
push
call
or
jnz
push
push
push
call
cmp
jz
mov
mov
push
call
mov
call
bound
popa
imul
outsb
add
xchg
int3
add
add
ror
repne
add
mov
push
push
push
call
cmp
jz
push
push
call
push
push
push
push
call
push
call
sub
mov
sub
mov
sub
mov
mov
push
push
push
call
cmp
jz
sub
mov
sub
mov
sub
mov
sub
mov
mov
push
push
push
call
mov
push
push
push
push
call
push
call
call
or
pop
push
push
push
push
call
push
call
call
push
push
dec
push
or
push
push
push
call
push
call
mov
push
call
call
mov
popa
mov
leave
retn
enter
pusha
mov
sub
mov
push
push
push
call
pop
call
dec
inc
dec
dec
and
popa
insv
popa
imul
outsb
or
dec
and
dec
dec
cmp
imul
jnz
bound
popa
imul
outsb
or
push
and
and
inc
push
inc
or
dec
cmp
and
push
outsv
insv
or
and
push
inc
dec
inc
inc
push
cmp
and
and
insv
insv
imul
dec
dec
inc
sub
imul
xor
jz
outsb
jz
jz
jo
cmp
insv
jnz
jz
jo
jc
das
insv
imul
outsv
jnz
fs
jc
cmp
push
dec
inc
inc
push
pop
and
or
sub
dec
inc
inc
push
pop
and
jz
outsb
jz
push
jns
cmp
jz
js
das
push
or
outsb
jz
outsb
jz
push
jc
outsb
jnc
??
inc
outsb
arpl
imul
outsv
jz
fs
jz
bound
or
insv
insb
ds
inc
inc
inc
ds
dec
inc
inc
inc
ds
outsv
??
bound
outsv
insb
outsv
jc
xor
ds
jc
insv
and
arpl
cmp
sub
push
jz
xor
ja
??
cmp
cmp
imul
cmp
bound
jns
cmp
push
or
sub
dec
inc
inc
push
pop
and
inc
sub
imul
xor
jz
outsb
jz
push
jns
cmp
popa
jnz
imul
jna
and
insv
gs
??
and
jz
outsb
jz
push
jc
outsb
jnc
??
inc
outsb
arpl
imul
jnc
ss
or
outsb
jz
outsb
jz
imul
inc
dec
inc
or
pop
mov
push
push
push
push
push
push
call
mov
mov
add
popa
mov
leave
retn
enter
pusha
mov
call
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
popa
bound
gs
imul
jo
jc
jz
jna
js
jp
xor
xor
sub
add
jnl
mov
shl
xor
xor
mov
shl
push
push
call
dec
jz
inc
loop
mov
cld
stosb
inc
jmp
dec
shl
mov
cld
stosb
inc
shr
add
mov
cld
rep
xor
stosb
popa
mov
leave
retn
enter
push
push
push
mov
mov
mov
shr
mov
not
and
shr
and
or
pop
pop
pop
leave
retn
pop
push
call
jmp
jmp
add
mov
call
push
mov
jmp
jmp
add
mov
pop
pop
pop
pop
jmp
jmp
add
add
jmp
call
call
jmp
jmp
mov
xor
leave
retn
call
dec
pop
push
add
add
add
add
add
