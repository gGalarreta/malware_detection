class Raw():

  def __init__(self):
    self.file_header_labels = []
    self.optional_header_labels = []
    self.pe_sections_labels = []

  def set_labels(self):
    self.file_header_labels = self.read_file_labels("/home/gustavo/Projects/malware-detection/modules/raw_analysis/file_header_labels.txt")
    self.optional_header_labels = self.read_file_labels("/home/gustavo/Projects/malware-detection/modules/raw_analysis/optional_header_labels.txt")
    self.pe_sections_labels = self.read_file_labels("/home/gustavo/Projects/malware-detection/modules/raw_analysis/pe_sections_labels.txt")

  def read_file_labels(self, file_name):
    lines = [line.rstrip('\n') for line in open(file_name)]
    return lines

  def disassemble(self, pe_data, file_name):
    file = open(file_name, "w")
    self.disassemble_file_header(pe_data, file)
    self.disassemble_optional_header(pe_data, file)
    self.disassemble_pe_sections(pe_data, file)

  def disassemble_file_header(self, pe_data, file):
    for feature in self.file_header_labels :
      file.write(feature + "," + str(getattr(pe_data.FILE_HEADER, feature)))
      file.write("\n")

  def disassemble_optional_header(self, pe_data, file):
    for feature in self.optional_header_labels:
      file.write(feature + "," + str(getattr(pe_data.OPTIONAL_HEADER, feature)))
      file.write("\n")

  def disassemble_pe_sections(self, pe_data, file):
    for section in pe_data.sections:
      for feature in self.pe_sections_labels:
        file.write(section.Name + "_" + feature + "," + str(getattr(section, feature)))
        file.write("\n")



