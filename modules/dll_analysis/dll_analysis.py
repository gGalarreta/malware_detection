import pefile
import os
import numpy as np

class Dll():

  def __init__(self):
    self.name = ""

  def disassemble(self, pe_data, file_name):
    file = open(file_name,"w")
    self.disassemble_imported_symbols(pe_data, file)
    self.disassemble_exported_symbols(pe_data, file)

  def disassemble_imported_symbols(self, pe_data, file):
    try:
      if pe_data.OPTIONAL_HEADER.DATA_DIRECTORY[pefile.DIRECTORY_ENTRY['IMAGE_DIRECTORY_ENTRY_IMPORT']].VirtualAddress != 0:
        pe_data.parse_data_directories(directories=[pefile.DIRECTORY_ENTRY['IMAGE_DIRECTORY_ENTRY_IMPORT']])
        for entry in pe_data.DIRECTORY_ENTRY_IMPORT:
          for imp in entry.imports:
            file.write(imp.name)
            file.write("\n")
    except Exception as e:
      print e

  def disassemble_exported_symbols(self, pe_data, file):
    # d = [pefile.DIRECTORY_ENTRY["IMAGE_DIRECTORY_ENTRY_EXPORT"]]
    # pe_data.parse_data_directories(directories=d)
    # exports = [(e.ordinal, e.name) for e in pe_data.DIRECTORY_ENTRY_EXPORT.symbols]
    # for export in sorted(exports):
      # print "imp_ordinal_%-4d imp_%s" % export
    return True

  def extract_features(self, input_directory, output_filename):
    files = os.listdir(input_directory)
    dll_list = np.array([])
    for file in files:
      file_name = input_directory + "/" + file
      dll_list = np.append(dll_list, self.read_file(file_name))
      dll_list = np.unique(dll_list)
    self.write_file(output_filename, dll_list)

  def read_file(self, file_name):
    lines = [line.rstrip('\n') for line in open(file_name)]
    lines = np.unique(lines)
    return lines

  def write_file(self, file_name, data_list):
    output_file = open(file_name, "w")
    for item in data_list:
      output_file.write(item)
      output_file.write("\n")

